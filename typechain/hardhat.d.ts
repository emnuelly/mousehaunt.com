/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers'
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase
} from '@nomiclabs/hardhat-ethers/types'

import * as Contracts from '.'

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'AccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>
    getContractFactory(
      name: 'IAccessControl',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>
    getContractFactory(
      name: 'Ownable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>
    getContractFactory(
      name: 'Pausable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>
    getContractFactory(
      name: 'ERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>
    getContractFactory(
      name: 'ERC20Burnable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>
    getContractFactory(
      name: 'IERC20Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>
    getContractFactory(
      name: 'IERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>
    getContractFactory(
      name: 'ERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>
    getContractFactory(
      name: 'ERC721Burnable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>
    getContractFactory(
      name: 'ERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>
    getContractFactory(
      name: 'ERC721URIStorage',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>
    getContractFactory(
      name: 'IERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>
    getContractFactory(
      name: 'IERC721Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>
    getContractFactory(
      name: 'IERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>
    getContractFactory(
      name: 'IERC721Receiver',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>
    getContractFactory(
      name: 'ERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>
    getContractFactory(
      name: 'IERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>
    getContractFactory(
      name: 'BMHTE',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BMHTE__factory>
    getContractFactory(
      name: 'BMHTG',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BMHTG__factory>
    getContractFactory(
      name: 'BMHTL',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BMHTL__factory>
    getContractFactory(
      name: 'BMHTR',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BMHTR__factory>
    getContractFactory(
      name: 'BoosterSale2',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoosterSale2__factory>
    getContractFactory(
      name: 'BoosterSale3',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoosterSale3__factory>
    getContractFactory(
      name: 'BoosterSaleGenesis',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoosterSaleGenesis__factory>
    getContractFactory(
      name: 'IBooster',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBooster__factory>
    getContractFactory(
      name: 'IMouseHero',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMouseHero__factory>
    getContractFactory(
      name: 'Random',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Random__factory>
    getContractFactory(
      name: 'Unpackable',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Unpackable__factory>
    getContractFactory(
      name: 'UnpackEPIC',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnpackEPIC__factory>
    getContractFactory(
      name: 'UnpackLEGENDARY',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnpackLEGENDARY__factory>
    getContractFactory(
      name: 'Marketplace',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Marketplace__factory>
    getContractFactory(
      name: 'MarketplaceStorage',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketplaceStorage__factory>
    getContractFactory(
      name: 'MouseHauntToken',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MouseHauntToken__factory>
    getContractFactory(
      name: 'MouseHero',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MouseHero__factory>
    getContractFactory(
      name: 'TokenAllocation',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenAllocation__factory>
    getContractFactory(
      name: 'Whitelist',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Whitelist__factory>
    getContractFactory(
      name: 'WhitelistSale',
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WhitelistSale__factory>

    getContractAt(
      name: 'AccessControl',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>
    getContractAt(
      name: 'IAccessControl',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>
    getContractAt(
      name: 'Ownable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>
    getContractAt(
      name: 'Pausable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>
    getContractAt(name: 'ERC20', address: string, signer?: ethers.Signer): Promise<Contracts.ERC20>
    getContractAt(
      name: 'ERC20Burnable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>
    getContractAt(
      name: 'IERC20Metadata',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>
    getContractAt(
      name: 'IERC20',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>
    getContractAt(
      name: 'ERC721',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>
    getContractAt(
      name: 'ERC721Burnable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>
    getContractAt(
      name: 'ERC721Enumerable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>
    getContractAt(
      name: 'ERC721URIStorage',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>
    getContractAt(
      name: 'IERC721Enumerable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>
    getContractAt(
      name: 'IERC721Metadata',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>
    getContractAt(
      name: 'IERC721',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>
    getContractAt(
      name: 'IERC721Receiver',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>
    getContractAt(
      name: 'ERC165',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>
    getContractAt(
      name: 'IERC165',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>
    getContractAt(name: 'BMHTE', address: string, signer?: ethers.Signer): Promise<Contracts.BMHTE>
    getContractAt(name: 'BMHTG', address: string, signer?: ethers.Signer): Promise<Contracts.BMHTG>
    getContractAt(name: 'BMHTL', address: string, signer?: ethers.Signer): Promise<Contracts.BMHTL>
    getContractAt(name: 'BMHTR', address: string, signer?: ethers.Signer): Promise<Contracts.BMHTR>
    getContractAt(
      name: 'BoosterSale2',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoosterSale2>
    getContractAt(
      name: 'BoosterSale3',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoosterSale3>
    getContractAt(
      name: 'BoosterSaleGenesis',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoosterSaleGenesis>
    getContractAt(
      name: 'IBooster',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBooster>
    getContractAt(
      name: 'IMouseHero',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMouseHero>
    getContractAt(
      name: 'Random',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Random>
    getContractAt(
      name: 'Unpackable',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Unpackable>
    getContractAt(
      name: 'UnpackEPIC',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnpackEPIC>
    getContractAt(
      name: 'UnpackLEGENDARY',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UnpackLEGENDARY>
    getContractAt(
      name: 'Marketplace',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Marketplace>
    getContractAt(
      name: 'MarketplaceStorage',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketplaceStorage>
    getContractAt(
      name: 'MouseHauntToken',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MouseHauntToken>
    getContractAt(
      name: 'MouseHero',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MouseHero>
    getContractAt(
      name: 'TokenAllocation',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenAllocation>
    getContractAt(
      name: 'Whitelist',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Whitelist>
    getContractAt(
      name: 'WhitelistSale',
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WhitelistSale>

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>
  }
}
