/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import { Provider } from '@ethersproject/providers'
import type { Whitelist, WhitelistInterface } from '../Whitelist'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'wallet',
        type: 'address'
      }
    ],
    name: 'AddedToWhitelist',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'wallet',
        type: 'address'
      }
    ],
    name: 'RemovedFromWhitelist',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'wallet',
        type: 'address'
      }
    ],
    name: 'isWhitelisted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
]

export class Whitelist__factory {
  static readonly abi = _abi
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist
  }
}
