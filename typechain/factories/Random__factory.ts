/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Random, RandomInterface } from "../Random";

const _abi = [
  {
    inputs: [],
    name: "PERCENTAGE_THOUSAND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5060b4806100236000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806345b12d4a14602d575b600080fd5b60336047565b604051603e9190605b565b60405180910390f35b620186a081565b6055816074565b82525050565b6000602082019050606e6000830184604e565b92915050565b600081905091905056fea264697066735822122022a8e06cd5876f01d39e03835a35dd1b4c5fe8ac4982a4b8f4af763eed66d5ee64736f6c63430008040033";

export class Random__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Random> {
    return super.deploy(overrides || {}) as Promise<Random>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Random {
    return super.attach(address) as Random;
  }
  connect(signer: Signer): Random__factory {
    return super.connect(signer) as Random__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomInterface {
    return new utils.Interface(_abi) as RandomInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Random {
    return new Contract(address, _abi, signerOrProvider) as Random;
  }
}
