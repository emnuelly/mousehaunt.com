/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenAllocation,
  TokenAllocationInterface,
} from "../TokenAllocation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mhtOwner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_mht",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unlockAtIGOPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliffMonths",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_vestingPeriodMonths",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "monthIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "THIRTY_DAYS_IN_SECONDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToUserInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingTokens",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "lastClaimMonthIndex",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffMonths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "igoTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mht",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mhtOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockAtIGOPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriodMonths",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162001877380380620018778339818101604052810190620000389190620002db565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415620000ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a290620003c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156200011e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001159062000436565b60405180910390fd5b606483111562000165576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015c90620004a8565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508260c081815250508160e081815250508061010081815250505050505050620004ca565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022382620001f6565b9050919050565b620002358162000216565b81146200024157600080fd5b50565b60008151905062000255816200022a565b92915050565b6000620002688262000216565b9050919050565b6200027a816200025b565b81146200028657600080fd5b50565b6000815190506200029a816200026f565b92915050565b6000819050919050565b620002b581620002a0565b8114620002c157600080fd5b50565b600081519050620002d581620002aa565b92915050565b600080600080600060a08688031215620002fa57620002f9620001f1565b5b60006200030a8882890162000244565b95505060206200031d8882890162000289565b94505060406200033088828901620002c4565b93505060606200034388828901620002c4565b92505060806200035688828901620002c4565b9150509295509295909350565b600082825260208201905092915050565b7f7a65726f206d68744f776e657200000000000000000000000000000000000000600082015250565b6000620003ac600d8362000363565b9150620003b98262000374565b602082019050919050565b60006020820190508181036000830152620003df816200039d565b9050919050565b7f7a65726f206d6874000000000000000000000000000000000000000000000000600082015250565b60006200041e60088362000363565b91506200042b82620003e6565b602082019050919050565b6000602082019050818103600083015262000451816200040f565b9050919050565b7f756e6c6f636b417449474f50657263656e74206d757374206c74652031303000600082015250565b600062000490601f8362000363565b91506200049d8262000458565b602082019050919050565b60006020820190508181036000830152620004c38162000481565b9050919050565b60805160a05160c05160e051610100516113296200054e600039600081816101d2015281816105f901526106ad0152600081816104970152818161059d015281816105c60152818161061a015261067001526000818161046c01526107d90152600081816101ae01526103a001526000818161037d015261044801526113296000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063762a9f2811610066578063762a9f28146100fc578063b55f1b701461011a578063bd1bc72114610138578063e3b9b22d14610156578063e6df33811461017457610093565b806322c13fd5146100985780632622c811146100b65780633210203b146100d45780634e71d92d146100f2575b600080fd5b6100a06101a6565b6040516100ad9190610a9e565b60405180910390f35b6100be6101ac565b6040516100cb9190610b38565b60405180910390f35b6100dc6101d0565b6040516100e99190610a9e565b60405180910390f35b6100fa6101f4565b005b610104610446565b6040516101119190610b74565b60405180910390f35b61012261046a565b60405161012f9190610a9e565b60405180910390f35b61014061048e565b60405161014d9190610a9e565b60405180910390f35b61015e610495565b60405161016b9190610a9e565b60405180910390f35b61018e60048036038101906101899190610bc0565b6104b9565b60405161019d93929190610c06565b60405180910390f35b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000805411801561020757506000544210155b610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d90610c9a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010154116102d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c790610d06565b60405180910390fd5b60004290506000600183600201546102e89190610d55565b905060006102f5836104e3565b905060008290505b81811161043f57600061033986604051806060016040529081600082015481526020016001820154815260200160028201548152505083610598565b905060008111801561034f575060008660010154115b1561042b57808660010160008282546103689190610de9565b925050819055508186600201819055506103e57f000000000000000000000000000000000000000000000000000000000000000033837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661074a909392919063ffffffff16565b80823373ffffffffffffffffffffffffffffffffffffffff167f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a60405160405180910390a45b50808061043790610e1d565b9150506102fd565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b62278d0081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b6000806000541180156104f857506000544210155b610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610c9a565b60405180910390fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506000805490505b83811161058e57818061057590610e66565b92505062278d00816105879190610eaf565b9050610563565b8192505050919050565b6000807f00000000000000000000000000000000000000000000000000000000000000001180156105e957507f00000000000000000000000000000000000000000000000000000000000000008211155b156105f75760009050610744565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006106439190610eaf565b8211156106535760009050610744565b600082141561066c57610665836107d3565b9050610744565b60007f00000000000000000000000000000000000000000000000000000000000000008361069a9190610de9565b905060006106a7856107d3565b905060007f00000000000000000000000000000000000000000000000000000000000000008287600001516106dc9190610de9565b6106e69190610f34565b905060006001846106f79190610de9565b826107029190610f65565b8361070d9190610eaf565b905060008188600001516107219190610de9565b90508260026107309190610f65565b81101561073b578092505b82955050505050505b92915050565b6107cd846323b872dd60e01b85858560405160240161076b93929190610fbf565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610818565b50505050565b600060647f000000000000000000000000000000000000000000000000000000000000000083600001516108079190610f65565b6108119190610f34565b9050919050565b600061087a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108df9092919063ffffffff16565b90506000815111156108da578080602001905181019061089a919061102e565b6108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d0906110cd565b60405180910390fd5b5b505050565b60606108ee84846000856108f7565b90509392505050565b60608247101561093c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109339061115f565b60405180910390fd5b61094585610a0b565b610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b906111cb565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516109ad9190611265565b60006040518083038185875af1925050503d80600081146109ea576040519150601f19603f3d011682016040523d82523d6000602084013e6109ef565b606091505b50915091506109ff828286610a1e565b92505050949350505050565b600080823b905060008111915050919050565b60608315610a2e57829050610a7e565b600083511115610a415782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7591906112d1565b60405180910390fd5b9392505050565b6000819050919050565b610a9881610a85565b82525050565b6000602082019050610ab36000830184610a8f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610afe610af9610af484610ab9565b610ad9565b610ab9565b9050919050565b6000610b1082610ae3565b9050919050565b6000610b2282610b05565b9050919050565b610b3281610b17565b82525050565b6000602082019050610b4d6000830184610b29565b92915050565b6000610b5e82610ab9565b9050919050565b610b6e81610b53565b82525050565b6000602082019050610b896000830184610b65565b92915050565b600080fd5b610b9d81610b53565b8114610ba857600080fd5b50565b600081359050610bba81610b94565b92915050565b600060208284031215610bd657610bd5610b8f565b5b6000610be484828501610bab565b91505092915050565b6000819050919050565b610c0081610bed565b82525050565b6000606082019050610c1b6000830186610a8f565b610c286020830185610a8f565b610c356040830184610bf7565b949350505050565b600082825260208201905092915050565b7f556e617661696c61626c65206265666f72652049474f00000000000000000000600082015250565b6000610c84601683610c3d565b9150610c8f82610c4e565b602082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b6000610cf0601183610c3d565b9150610cfb82610cba565b602082019050919050565b60006020820190508181036000830152610d1f81610ce3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6082610bed565b9150610d6b83610bed565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615610da657610da5610d26565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615610dde57610ddd610d26565b5b828201905092915050565b6000610df482610a85565b9150610dff83610a85565b925082821015610e1257610e11610d26565b5b828203905092915050565b6000610e2882610a85565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5b57610e5a610d26565b5b600182019050919050565b6000610e7182610bed565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ea457610ea3610d26565b5b600182019050919050565b6000610eba82610a85565b9150610ec583610a85565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610efa57610ef9610d26565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3f82610a85565b9150610f4a83610a85565b925082610f5a57610f59610f05565b5b828204905092915050565b6000610f7082610a85565b9150610f7b83610a85565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb457610fb3610d26565b5b828202905092915050565b6000606082019050610fd46000830186610b65565b610fe16020830185610b65565b610fee6040830184610a8f565b949350505050565b60008115159050919050565b61100b81610ff6565b811461101657600080fd5b50565b60008151905061102881611002565b92915050565b60006020828403121561104457611043610b8f565b5b600061105284828501611019565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006110b7602a83610c3d565b91506110c28261105b565b604082019050919050565b600060208201905081810360008301526110e6816110aa565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611149602683610c3d565b9150611154826110ed565b604082019050919050565b600060208201905081810360008301526111788161113c565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006111b5601d83610c3d565b91506111c08261117f565b602082019050919050565b600060208201905081810360008301526111e4816111a8565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561121f578082015181840152602081019050611204565b8381111561122e576000848401525b50505050565b600061123f826111eb565b61124981856111f6565b9350611259818560208601611201565b80840191505092915050565b60006112718284611234565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b60006112a38261127c565b6112ad8185610c3d565b93506112bd818560208601611201565b6112c681611287565b840191505092915050565b600060208201905081810360008301526112eb8184611298565b90509291505056fea26469706673582212208b2688cde37e58d71c2bc9aaad8526fb0841488517374ad5df779b67efb9522364736f6c63430008090033";

export class TokenAllocation__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _mhtOwner: string,
    _mht: string,
    _unlockAtIGOPercent: BigNumberish,
    _cliffMonths: BigNumberish,
    _vestingPeriodMonths: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenAllocation> {
    return super.deploy(
      _mhtOwner,
      _mht,
      _unlockAtIGOPercent,
      _cliffMonths,
      _vestingPeriodMonths,
      overrides || {}
    ) as Promise<TokenAllocation>;
  }
  getDeployTransaction(
    _mhtOwner: string,
    _mht: string,
    _unlockAtIGOPercent: BigNumberish,
    _cliffMonths: BigNumberish,
    _vestingPeriodMonths: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mhtOwner,
      _mht,
      _unlockAtIGOPercent,
      _cliffMonths,
      _vestingPeriodMonths,
      overrides || {}
    );
  }
  attach(address: string): TokenAllocation {
    return super.attach(address) as TokenAllocation;
  }
  connect(signer: Signer): TokenAllocation__factory {
    return super.connect(signer) as TokenAllocation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenAllocationInterface {
    return new utils.Interface(_abi) as TokenAllocationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenAllocation {
    return new Contract(address, _abi, signerOrProvider) as TokenAllocation;
  }
}
